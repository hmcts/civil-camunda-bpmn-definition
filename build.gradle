plugins {
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.4.2'
  id 'org.owasp.dependencycheck' version '6.0.5'
  id 'com.github.ben-manes.versions' version '0.36.0'
  id 'org.sonarqube' version '3.1'
  id 'au.com.dius.pact' version '4.1.15'
  id "io.freefair.lombok" version "5.3.0"
  id "org.flywaydb.flyway" version "7.5.1"
  id 'net.ltgt.apt' version '0.21'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {

  sourceCompatibility = '11'
  targetCompatibility = '11'

  apply plugin: 'java'
  apply plugin: 'jacoco'
  apply plugin: 'checkstyle'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'org.owasp.dependencycheck'
  apply plugin: 'com.github.ben-manes.versions'
  apply plugin: 'net.ltgt.apt'

  checkstyle {
    maxWarnings = 0
    toolVersion = '8.29'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
  }

  jacoco {
    toolVersion = '0.8.5' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
  }

// before committing a change, make sure task still works
  dependencyUpdates {
    def isNonStable = { String version ->
      def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
      def regex = /^[0-9,.v-]+$/
      return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
      return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
  }

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
  dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
      // Disable scanning of .NET related binaries
      assemblyEnabled = false
    }
  }

  dependencyManagement {
    dependencies {
      dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.68'
      // CVE-2018-10237 - Unbounded memory allocation
      dependency group: 'org.mybatis', name: 'mybatis', version: '3.5.6'
      // CVE-2020-26945 - Mishandles deserialization of object streams.
      dependencySet(group: 'com.google.guava', version: '30.1-jre') {
        entry 'guava'
      }
    }
    imports {
      mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.0'
    }
  }

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
      url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
    maven {
      url  "http://repo.spring.io/milestone"
    }
    maven {
      url  "https://repo.spring.io/libs-milestone"
    }
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task installDependencies(type: Exec, description: 'Installs Yarn dependencies.') {
  commandLine '/usr/bin/yarn', '--mutex', 'network', '--frozen-lockfile', '--silent', 'install'
}

task checkDependenciesIntegrity(type: Exec, description: 'Checks integrity of Yarn dependencies.') {
  commandLine '/usr/bin/yarn', '--mutex', 'network', '--frozen-lockfile', '--silent', 'check', '--integrity'
}

task awaitApplicationReadiness(type: Exec, description: 'Awaits until application is ready.') {
  commandLine './bin/wait-for.sh', System.env.URL
}

task runSmokeTests(type: Exec, description: 'Runs smoke tests.') {
  commandLine '/usr/bin/yarn', '--silent', 'test:smoke'
}

task runFunctionalTests(type: Exec, description: 'Runs functional tests.') {
  commandLine '/usr/bin/yarn', '--silent', 'test:functional'
}

def inStrictOrder(Task... tasks) {
  for (int i = 0; i < tasks.size() - 1; i++) {
    tasks[i + 1].mustRunAfter(tasks[i])
  }
  return tasks
}

task smoke(description: 'Runs the smoke tests.') {
  dependsOn(inStrictOrder(awaitApplicationReadiness, installDependencies, checkDependenciesIntegrity, runSmokeTests))
}

task functional(description: 'Runs the functional tests.') {
  dependsOn(inStrictOrder(awaitApplicationReadiness, installDependencies, checkDependenciesIntegrity, runFunctionalTests))
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "UNSPEC :: civil-damages-camunda-bpmn-definition"
    property "sonar.projectKey", "civil-damages-camunda-bpmn-definition"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.host.url", "https://sonar.reform.hmcts.net/"
  }
}

jacocoTestReport {
  executionData(test)
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
  subprojects.each {
    sourceSets it.sourceSets.main
  }
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

jacocoTestReport.dependsOn {
  subprojects*.test
}

def versions = [
  junit              : '5.7.0',
  junitPlatform      : '1.7.0',
  reformLogging      : '5.1.5',
  springBoot         : springBoot.class.package.implementationVersion,
  springStatemachine : '3.0.0.M2',
  springfoxSwagger   : '2.9.2',
  lombok             : '1.18.12',
  pact               : '3.5.24'
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework', name: 'spring-aspects'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'

  implementation group: 'org.springframework.statemachine', name: 'spring-statemachine-core', version: versions.springStatemachine

  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
  implementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.18.0'
  implementation group: 'org.jdbi', name: 'jdbi3-spring4', version: '3.18.0'
  implementation group: 'org.flywaydb', name: 'flyway-core'

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.6.RELEASE'
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.4'

  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.0'
  implementation group: 'org.springframework.retry', name: 'spring-retry'

  implementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '4.7.5'
  implementation group: 'uk.gov.hmcts.reform', name: 'document-management-client', version: '7.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'fees-java-client', version: '0.0.6'
  implementation group: 'uk.gov.hmcts.reform', name: 'payments-client', version: '1.0.1'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.4'
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
  implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.17.0-RELEASE'

  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.7.0'

  implementation group: 'org.springframework.security', name: 'spring-security-web'
  implementation group: 'org.springframework.security', name: 'spring-security-config'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.4.1'
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.14.0'

  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.40'
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.40'

  implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.10.2'

  implementation group: 'com.networknt', name: 'json-schema-validator', version: '1.0.47'

  implementation group: 'org.camunda.bpm', name: 'camunda-external-task-client', version: '1.4.1'
  implementation group: 'org.camunda.bpm.extension.rest', name: 'camunda-rest-client-spring-boot-starter', version: '0.0.4'
  implementation group: 'org.camunda.bpm', name: 'camunda-engine-rest-core', version: '7.14.0'
  implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.12.1'

  // JAX-B dependencies for JDK 9+
  implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
  implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.0'
  implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '3.0.0'

  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.2.2'

  testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.7.7'
  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.7.7'
  testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.7.7'

  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

  testImplementation group: 'org.camunda.bpm.extension.springboot', name: 'camunda-bpm-spring-boot-starter-test', version: '2.2.0'

  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'

  testImplementation group: 'io.rest-assured', name: 'rest-assured', {
    exclude group: 'io.rest-assured', module: 'xml-path'
  }

  testCompile group: 'org.springframework.statemachine', name: 'spring-statemachine-test', version: versions.springStatemachine

  functionalTestImplementation sourceSets.main.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
}

mainClassName = 'uk.gov.hmcts.reform.unspec.Application'

bootJar {
  getArchiveFileName().set(provider {
    'empty.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

project.ext {
  pactVersion = getCheckedOutGitCommitHash()
}

pact {
  publish {
    pactDirectory = 'target/pacts'
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    tags = [System.getenv("PACT_BRANCH_NAME") ?: getCheckedOutGitCommitHash()]
    version = project.pactVersion
  }
}

def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}
